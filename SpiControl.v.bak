// File: SpiControl.v
// Generated by MyHDL 0.9.0
// Date: Fri Feb 24 17:24:41 2017


`timescale 1ns/10ps

module SpiControl (
    clock,
    data,
    dataReady,
    send,
    nextField,
    byte,
    reset
);
// Splits the 32-bit data into byte chunks
// 
// data -- input data
// dataReady -- signal data is ready for transmission
// send -- toggle the transmission
// byte -- which part should be send

input clock;
input [31:0] data;
input dataReady;
output send;
reg send;
input [4:0] nextField;
output [7:0] byte;
reg [7:0] byte;
input reset;






always @(posedge clock, negedge reset) begin: SPICONTROL_SPILOGIC
    if (reset == 0) begin
        byte <= 0;
        send <= 0;
    end
    else begin
        if (dataReady) begin
            byte <= data[(((nextField + 1) * 8) - 1)-1:(nextField * 8)];
            send <= 1;
        end
        else begin
            send <= 0;
        end
    end
end

endmodule
