library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity decoder is
   port( rising: in std_logic;
 	 timer: in std_logic_vector(0 to 31);
	 skip: out std_logic;
	 rotor: out std_logic;
	 data: out std_logic);
end decoder;
 
architecture Behavioral of decoder is
   signal temp: std_logic_vector(0 to 31);
	signal rising_true: std_logic;
begin   process(sensor)
	variable TEMP : STD_LOGIC_VECTOR(0 to 5);
   begin
		if (rising = '1') then
			temp <= timer;
			rising_true <= '1';
		elsif falling_edge(sensor) then
			temp <= timer;
			rising_true <= '0';
		end if;
   end process;
		rising <= rising_true;
		edge_time <= temp;   
end Behavioral;